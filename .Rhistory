## sd has Sensor Depths
sd<-read.csv("C:\\Users\\aryoung\\Downloads\\SWC_depths.csv")
# site-plot-meas. Used for matching up sensor depths
sd$spd<-paste(sd$site, sd$plot, sd$measurementLevel)
## Load soil moisture data to R environment
sm <- loadByProduct(dpID="DP1.00094.001",
site=c("BART","SRER","KONZ","OSBS"),
startdate="2019-01",
enddate="2019-12")
library(neonUtilities)
library(lubridate)
library(ggplot2)
options(stringsAsFactors=F)
## sd has Sensor Depths
sd<-read.csv("C:\\Users\\aryoung\\Downloads\\SWC_depths.csv")
# site-plot-meas. Used for matching up sensor depths
sd$spd<-paste(sd$site, sd$plot, sd$measurementLevel)
## Load soil moisture data to R environment
sm <- loadByProduct(dpID="DP1.00094.001",
site=c("BART","SRER","KONZ","OSBS"),
startdate="2019-01",
enddate="2019-12")
sm30<-sm$SWS_30_minute
## Load soil moisture data to R environment
sm <- loadByProduct(dpID="DP1.00094.001",
site=c("BART","SRER","KONZ","OSBS"),
startdate="2019-01",
enddate="2019-12", check.size=F)
# Use the half hourly data
sm30<-sm$SWS_30_minute
# turn into numeric for later matching with sensor depth measurements
sm30$horizontalPosition<-as.numeric(sm30$horizontalPosition)
sm30$verticalPosition<-as.numeric(sm30$verticalPosition)
# subtract 500 to get rid of the leading '50_' in the vertical position codes.
sm30$verticalPosition<-sm30$verticalPosition-500
## subset to only use closest sensor (sensor 1 is typically the closest)
sensor1<-sm30[sm30$horizontalPosition=="1",]
## sd has Sensor Depths
sd<-read.csv("C:\\Users\\aryoung\\Downloads\\SWC_depths.csv")
# site-plot-meas. Used for matching up sensor depths
sd$spd<-paste(sd$site, sd$plot, sd$measurementLevel)
## Load soil moisture data to R environment
sm <- loadByProduct(dpID="DP1.00094.001",
site=c("BART","SRER","KONZ","OSBS"),
startdate="2019-01",
enddate="2019-12", check.size=F)
head(sd)
bart_sd<-sd[sd$site=="BART",]
bart_sd<-sd[sd$site=="BART",]
sd<-sd[sd$plot==1,]
# site-plot-meas. Used for matching up sensor depths
sd$spd<-paste(sd$site, sd$plot, sd$measurementLevel)
bart_sd<-sd[sd$site=="BART",]
head(bart_sd)
head(bart_sd, 10)
bart_sd$width<-"NA"
head(bart_sd, 10)
bart_sd[9,1]
probe1width<-bart_sd[5,1]
bart_sd[9,1]
bart_sd[5,1]
probe1width<-bart_sd[6,1]
bart_sd[6,1]
head(bart_sd, 10)
bart_sd[1,5]
bart_sd[1,5]-bart_sd[2,5])/2
probe1width<-(bart_sd[1,5]-bart_sd[2,5]/2
bart_sd[1,5]-bart_sd[2,5])/2
bart_sd[1,5]-bart_sd[2,5]/2
probe1width<-(bart_sd[2,5]-bart_sd[1,5])
probe1width
bart_sd[1,5]-bart_sd[2,5]/2
bart_sd[1,5]+bart_sd[2,5]/2
sd$sensorDepths<-sd$sensorDepths*-1
sd$sensorDepths<-sd$sensorDepths*-1  # make depths positive for easier math
sd<-sd[sd$plot==1,]
# site-plot-meas. Used for matching up sensor depths
sd$spd<-paste(sd$site, sd$plot, sd$measurementLevel)
bart_sd<-sd[sd$site=="BART",]
head(bart_sd, 10)
sd$sensorDepths<-sd$sensorDepths*-1  # make depths positive for easier math
sd<-sd[sd$plot==1,]
# site-plot-meas. Used for matching up sensor depths
sd$spd<-paste(sd$site, sd$plot, sd$measurementLevel)
bart_sd<-sd[sd$site=="BART",]
head(bart_sd, 10)
probe1width<-(bart_sd[2,5]-bart_sd[1,5])
probe1width
bart_sd[1,5]+bart_sd[2,5]/2
.16-.06
(bart_sd[1,5]+bart_sd[2,5])/2
((bart_sd[1,5]+bart_sd[2,5])/2)/bart_sd[8,5]
((bart_sd[1,5]+bart_sd[2,5])/2)
probe1width<-((bart_sd[1,5]+bart_sd[2,5])/2)
bart_sd$width<-"NA"
bart_sd[1,9]<-((bart_sd[1,5]+bart_sd[2,5])/2)
head(bart_sd, 10)
bart_sd[1,9]<-((bart_sd[1,5]+bart_sd[2,5])/2)
bart_sd[2,9]<-((bart_sd[2,5]+bart_sd[3,5])/2)
bart_sd[3,9]<-((bart_sd[3,5]+bart_sd[4,5])/2)
bart_sd[4,9]<-((bart_sd[4,5]+bart_sd[5,5])/2)
bart_sd[5,9]<-((bart_sd[5,5]+bart_sd[6,5])/2)
bart_sd[6,9]<-((bart_sd[6,5]+bart_sd[7,5])/2)
bart_sd[7,9]<-((bart_sd[7,5]+bart_sd[8,5])/2)
bart_sd[8,9]<-((bart_sd[8,5]+bart_sd[2,5])/2)
head(bart_sd, 10)
((bart_sd[2,5]-bart_sd[2,5])/2)
((bart_sd[2,5]-bart_sd[1,5])/2)
((bart_sd[2,5]-bart_sd[1,5]))
((bart_sd[2,5]-bart_sd[1,5])/2)+bart_sd[1,5]
bart_sd$width<-"NA"
bart_sd[1,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+bart_sd[1,5]
head(bart_sd, 10)
bart_sd[2,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+((bart_sd[3,5]-bart_sd[2,5])/2)
head(bart_sd, 10)
bart_sd[3,9]<-((bart_sd[3,5]-bart_sd[2,5])/2)+((bart_sd[4,5]-bart_sd[3,5])/2)
head(bart_sd, 10)
bart_sd<-sd[sd$site=="BART",]
head(bart_sd, 10)
bart_sd$width<-"NA"
bart_sd[1,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+bart_sd[1,5]
bart_sd[2,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+((bart_sd[3,5]-bart_sd[2,5])/2)
bart_sd[3,9]<-((bart_sd[3,5]-bart_sd[2,5])/2)+((bart_sd[4,5]-bart_sd[3,5])/2)
bart_sd[4,9]<-((bart_sd[4,5]-bart_sd[3,5])/2)+((bart_sd[5,5]-bart_sd[4,5])/2)
bart_sd[5,9]<-((bart_sd[5,5]-bart_sd[4,5])/2)+((bart_sd[6,5]-bart_sd[5,5])/2)
bart_sd[6,9]<-((bart_sd[6,5]-bart_sd[5,5])/2)+((bart_sd[7,5]-bart_sd[6,5])/2)
bart_sd[7,9]<-((bart_sd[7,5]-bart_sd[6,5])/2)+((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd[8,9]<-((bart_sd[8,5]-bart_sd[7,5])/2)
head(bart_sd, 10)
sum(bart_sd$width)
bart_sd$width<-"0"
bart_sd[1,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+bart_sd[1,5]
bart_sd[2,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+((bart_sd[3,5]-bart_sd[2,5])/2)
bart_sd[3,9]<-((bart_sd[3,5]-bart_sd[2,5])/2)+((bart_sd[4,5]-bart_sd[3,5])/2)
bart_sd[4,9]<-((bart_sd[4,5]-bart_sd[3,5])/2)+((bart_sd[5,5]-bart_sd[4,5])/2)
bart_sd[5,9]<-((bart_sd[5,5]-bart_sd[4,5])/2)+((bart_sd[6,5]-bart_sd[5,5])/2)
bart_sd[6,9]<-((bart_sd[6,5]-bart_sd[5,5])/2)+((bart_sd[7,5]-bart_sd[6,5])/2)
bart_sd[7,9]<-((bart_sd[7,5]-bart_sd[6,5])/2)+((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd[8,9]<-((bart_sd[8,5]-bart_sd[7,5])/2)
sum(bart_sd$width)
bart_sd$width<-0
head(bart_sd, 10)
bart_sd[1,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+bart_sd[1,5]
head(bart_sd, 10)
bart_sd[1,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+bart_sd[1,5]
bart_sd[2,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+((bart_sd[3,5]-bart_sd[2,5])/2)
bart_sd[3,9]<-((bart_sd[3,5]-bart_sd[2,5])/2)+((bart_sd[4,5]-bart_sd[3,5])/2)
bart_sd[4,9]<-((bart_sd[4,5]-bart_sd[3,5])/2)+((bart_sd[5,5]-bart_sd[4,5])/2)
bart_sd[5,9]<-((bart_sd[5,5]-bart_sd[4,5])/2)+((bart_sd[6,5]-bart_sd[5,5])/2)
bart_sd[6,9]<-((bart_sd[6,5]-bart_sd[5,5])/2)+((bart_sd[7,5]-bart_sd[6,5])/2)
bart_sd[7,9]<-((bart_sd[7,5]-bart_sd[6,5])/2)+((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd[8,9]<-((bart_sd[8,5]-bart_sd[7,5])/2)
sum(bart_sd$width)
bart_sd$proportion<-bart_sd$width/bart_sd[8,9]
sum(bart_sd$proportion)# checkS out.
head(bart_sd, 10)
bart_sd$proportion<-bart_sd$width/bart_sd[8,5]
sum(bart_sd$proportion)# checkS out.
head(bart_sd, 10)
## sd has Sensor Depths
sd<-read.csv("C:\\Users\\aryoung\\Downloads\\SWC_depths.csv")
sd$sensorDepths<-sd$sensorDepths*-1  # make depths positive for easier math
sd<-sd[sd$plot==1,] # only use the first sensor per site (typically the closest to each tower)
sd$sensorDepths<-sd$sensorDepths*-1  # multiply negative depth values by -1 for easier math
## sd has Sensor Depths
sd<-read.csv("C:\\Users\\aryoung\\Downloads\\SWC_depths.csv")
sd$sensorDepths<-sd$sensorDepths*-1  # multiply negative depth values by -1 for easier math
sd<-sd[sd$plot==1,] # only use the first sensor per site (typically the closest to each tower)
###make df for each site
bart_sd<-sd[sd$site=="BART",]
bart_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
bart_sd[1,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+bart_sd[1,5]
bart_sd[2,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+((bart_sd[3,5]-bart_sd[2,5])/2)
bart_sd[3,9]<-((bart_sd[3,5]-bart_sd[2,5])/2)+((bart_sd[4,5]-bart_sd[3,5])/2)
bart_sd[4,9]<-((bart_sd[4,5]-bart_sd[3,5])/2)+((bart_sd[5,5]-bart_sd[4,5])/2)
bart_sd[5,9]<-((bart_sd[5,5]-bart_sd[4,5])/2)+((bart_sd[6,5]-bart_sd[5,5])/2)
bart_sd[6,9]<-((bart_sd[6,5]-bart_sd[5,5])/2)+((bart_sd[7,5]-bart_sd[6,5])/2)
bart_sd[7,9]<-((bart_sd[7,5]-bart_sd[6,5])/2)+((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd[8,9]<-((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd$proportion<-bart_sd$width/bart_sd[8,5] # divide by the lowest sensor depth
bart_sd$weight<-bart_sd$width/bart_sd[8,5] # divide by the lowest sensor depth
#KONZ
konz_sd<-sd[sd$site=="KONZ",]
rbind(bart_sd, osbs_sd,srer_sd,konz_sd)
weighted.sensors<-rbind(bart_sd, osbs_sd,srer_sd,konz_sd)
#BART
bart_sd<-sd[sd$site=="BART",]
bart_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
bart_sd[1,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+bart_sd[1,5]
bart_sd[2,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+((bart_sd[3,5]-bart_sd[2,5])/2)
bart_sd[3,9]<-((bart_sd[3,5]-bart_sd[2,5])/2)+((bart_sd[4,5]-bart_sd[3,5])/2)
bart_sd[4,9]<-((bart_sd[4,5]-bart_sd[3,5])/2)+((bart_sd[5,5]-bart_sd[4,5])/2)
bart_sd[5,9]<-((bart_sd[5,5]-bart_sd[4,5])/2)+((bart_sd[6,5]-bart_sd[5,5])/2)
bart_sd[6,9]<-((bart_sd[6,5]-bart_sd[5,5])/2)+((bart_sd[7,5]-bart_sd[6,5])/2)
bart_sd[7,9]<-((bart_sd[7,5]-bart_sd[6,5])/2)+((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd[8,9]<-((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd$weight<-bart_sd$width/bart_sd[8,5] # divide by the lowest sensor depth
#OSBS
osbs_sd<-sd[sd$site=="OSBS",]
osbs_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
osbs_sd[1,9]<-((osbs_sd[2,5]-osbs_sd[1,5])/2)+osbs_sd[1,5]
osbs_sd[2,9]<-((osbs_sd[2,5]-osbs_sd[1,5])/2)+((osbs_sd[3,5]-osbs_sd[2,5])/2)
osbs_sd[3,9]<-((osbs_sd[3,5]-osbs_sd[2,5])/2)+((osbs_sd[4,5]-osbs_sd[3,5])/2)
osbs_sd[4,9]<-((osbs_sd[4,5]-osbs_sd[3,5])/2)+((osbs_sd[5,5]-osbs_sd[4,5])/2)
osbs_sd[5,9]<-((osbs_sd[5,5]-osbs_sd[4,5])/2)+((osbs_sd[6,5]-osbs_sd[5,5])/2)
osbs_sd[6,9]<-((osbs_sd[6,5]-osbs_sd[5,5])/2)+((osbs_sd[7,5]-osbs_sd[6,5])/2)
osbs_sd[7,9]<-((osbs_sd[7,5]-osbs_sd[6,5])/2)+((osbs_sd[8,5]-osbs_sd[7,5])/2)
osbs_sd[8,9]<-((osbs_sd[8,5]-osbs_sd[7,5])/2)
osbs_sd$weight<-osbs_sd$width/osbs_sd[8,5] # divide by the lowest sensor depth
#SRER
srer_sd<-sd[sd$site=="SRER",]
srer_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
srer_sd[1,9]<-((srer_sd[2,5]-srer_sd[1,5])/2)+srer_sd[1,5]
srer_sd[2,9]<-((srer_sd[2,5]-srer_sd[1,5])/2)+((srer_sd[3,5]-srer_sd[2,5])/2)
srer_sd[3,9]<-((srer_sd[3,5]-srer_sd[2,5])/2)+((srer_sd[4,5]-srer_sd[3,5])/2)
srer_sd[4,9]<-((srer_sd[4,5]-srer_sd[3,5])/2)+((srer_sd[5,5]-srer_sd[4,5])/2)
srer_sd[5,9]<-((srer_sd[5,5]-srer_sd[4,5])/2)+((srer_sd[6,5]-srer_sd[5,5])/2)
srer_sd[6,9]<-((srer_sd[6,5]-srer_sd[5,5])/2)+((srer_sd[7,5]-srer_sd[6,5])/2)
srer_sd[7,9]<-((srer_sd[7,5]-srer_sd[6,5])/2)+((srer_sd[8,5]-srer_sd[7,5])/2)
srer_sd[8,9]<-((srer_sd[8,5]-srer_sd[7,5])/2)
srer_sd$weight<-srer_sd$width/srer_sd[8,5] # divide by the lowest sensor depth
#KONZ
konz_sd<-sd[sd$site=="KONZ",]
konz_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
konz_sd[1,9]<-((konz_sd[2,5]-konz_sd[1,5])/2)+konz_sd[1,5]
konz_sd[2,9]<-((konz_sd[2,5]-konz_sd[1,5])/2)+((konz_sd[3,5]-konz_sd[2,5])/2)
konz_sd[3,9]<-((konz_sd[3,5]-konz_sd[2,5])/2)+((konz_sd[4,5]-konz_sd[3,5])/2)
konz_sd[4,9]<-((konz_sd[4,5]-konz_sd[3,5])/2)+((konz_sd[5,5]-konz_sd[4,5])/2)
konz_sd[5,9]<-((konz_sd[5,5]-konz_sd[4,5])/2)+((konz_sd[6,5]-konz_sd[5,5])/2)
konz_sd[6,9]<-((konz_sd[6,5]-konz_sd[5,5])/2)+((konz_sd[7,5]-konz_sd[6,5])/2)
konz_sd[7,9]<-((konz_sd[7,5]-konz_sd[6,5])/2)+((konz_sd[8,5]-konz_sd[7,5])/2)
konz_sd[8,9]<-((konz_sd[8,5]-konz_sd[7,5])/2)
konz_sd$weight<-konz_sd$width/konz_sd[8,5] # divide by the lowest sensor depth
konz_sd<-sd[sd$site=="BART",]
weighted.sensors<-rbind(bart_sd, osbs_sd,srer_sd,konz_sd)
weighted.sensors<-cbind(bart_sd, osbs_sd,srer_sd,konz_sd)
weighted.sensors
###make df for each site
#BART
bart_sd<-sd[sd$site=="BART",]
bart_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
bart_sd[1,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+bart_sd[1,5]
bart_sd[2,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+((bart_sd[3,5]-bart_sd[2,5])/2)
bart_sd[3,9]<-((bart_sd[3,5]-bart_sd[2,5])/2)+((bart_sd[4,5]-bart_sd[3,5])/2)
bart_sd[4,9]<-((bart_sd[4,5]-bart_sd[3,5])/2)+((bart_sd[5,5]-bart_sd[4,5])/2)
bart_sd[5,9]<-((bart_sd[5,5]-bart_sd[4,5])/2)+((bart_sd[6,5]-bart_sd[5,5])/2)
bart_sd[6,9]<-((bart_sd[6,5]-bart_sd[5,5])/2)+((bart_sd[7,5]-bart_sd[6,5])/2)
bart_sd[7,9]<-((bart_sd[7,5]-bart_sd[6,5])/2)+((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd[8,9]<-((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd$weight<-bart_sd$width/bart_sd[8,5] # divide by the lowest sensor depth
dim(bart_sd)
#OSBS
osbs_sd<-sd[sd$site=="OSBS",]
osbs_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
osbs_sd[1,9]<-((osbs_sd[2,5]-osbs_sd[1,5])/2)+osbs_sd[1,5]
osbs_sd[2,9]<-((osbs_sd[2,5]-osbs_sd[1,5])/2)+((osbs_sd[3,5]-osbs_sd[2,5])/2)
osbs_sd[3,9]<-((osbs_sd[3,5]-osbs_sd[2,5])/2)+((osbs_sd[4,5]-osbs_sd[3,5])/2)
osbs_sd[4,9]<-((osbs_sd[4,5]-osbs_sd[3,5])/2)+((osbs_sd[5,5]-osbs_sd[4,5])/2)
osbs_sd[5,9]<-((osbs_sd[5,5]-osbs_sd[4,5])/2)+((osbs_sd[6,5]-osbs_sd[5,5])/2)
osbs_sd[6,9]<-((osbs_sd[6,5]-osbs_sd[5,5])/2)+((osbs_sd[7,5]-osbs_sd[6,5])/2)
osbs_sd[7,9]<-((osbs_sd[7,5]-osbs_sd[6,5])/2)+((osbs_sd[8,5]-osbs_sd[7,5])/2)
osbs_sd[8,9]<-((osbs_sd[8,5]-osbs_sd[7,5])/2)
osbs_sd$weight<-osbs_sd$width/osbs_sd[8,5] # divide by the lowest sensor depth
dim(osbs_sd)
#SRER
srer_sd<-sd[sd$site=="SRER",]
srer_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
srer_sd[1,9]<-((srer_sd[2,5]-srer_sd[1,5])/2)+srer_sd[1,5]
srer_sd[2,9]<-((srer_sd[2,5]-srer_sd[1,5])/2)+((srer_sd[3,5]-srer_sd[2,5])/2)
srer_sd[3,9]<-((srer_sd[3,5]-srer_sd[2,5])/2)+((srer_sd[4,5]-srer_sd[3,5])/2)
srer_sd[4,9]<-((srer_sd[4,5]-srer_sd[3,5])/2)+((srer_sd[5,5]-srer_sd[4,5])/2)
srer_sd[5,9]<-((srer_sd[5,5]-srer_sd[4,5])/2)+((srer_sd[6,5]-srer_sd[5,5])/2)
srer_sd[6,9]<-((srer_sd[6,5]-srer_sd[5,5])/2)+((srer_sd[7,5]-srer_sd[6,5])/2)
srer_sd[7,9]<-((srer_sd[7,5]-srer_sd[6,5])/2)+((srer_sd[8,5]-srer_sd[7,5])/2)
srer_sd[8,9]<-((srer_sd[8,5]-srer_sd[7,5])/2)
srer_sd$weight<-srer_sd$width/srer_sd[8,5] # divide by the lowest sensor depth
#KONZ
konz_sd<-sd[sd$site=="KONZ",]
dim(srer_sd)
#KONZ
konz_sd<-sd[sd$site=="KONZ",]
konz_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
konz_sd[1,9]<-((konz_sd[2,5]-konz_sd[1,5])/2)+konz_sd[1,5]
konz_sd[2,9]<-((konz_sd[2,5]-konz_sd[1,5])/2)+((konz_sd[3,5]-konz_sd[2,5])/2)
konz_sd[3,9]<-((konz_sd[3,5]-konz_sd[2,5])/2)+((konz_sd[4,5]-konz_sd[3,5])/2)
konz_sd[4,9]<-((konz_sd[4,5]-konz_sd[3,5])/2)+((konz_sd[5,5]-konz_sd[4,5])/2)
konz_sd[5,9]<-((konz_sd[5,5]-konz_sd[4,5])/2)+((konz_sd[6,5]-konz_sd[5,5])/2)
konz_sd[6,9]<-((konz_sd[6,5]-konz_sd[5,5])/2)+((konz_sd[7,5]-konz_sd[6,5])/2)
konz_sd[7,9]<-((konz_sd[7,5]-konz_sd[6,5])/2)+((konz_sd[8,5]-konz_sd[7,5])/2)
konz_sd[8,9]<-((konz_sd[8,5]-konz_sd[7,5])/2)
konz_sd$weight<-konz_sd$width/konz_sd[8,5] # divide by the lowest sensor depth
konz_sd<-sd[sd$site=="BART",]
dim(konz_sd)
#KONZ
konz_sd<-sd[sd$site=="KONZ",]
head(konz_sd)
## sd has Sensor Depths
sd<-read.csv("C:\\Users\\aryoung\\Downloads\\SWC_depths.csv")
# multiply negative depth values by -1 for easier math
sd$sensorDepths<-sd$sensorDepths*-1
# only use the first sensor per site (typically the closest to each tower)
sd<-sd[sd$plot==1,]
# site-plot-meas. Used for matching up sensor depths
sd$spd<-paste(sd$site, sd$plot, sd$measurementLevel)
#KONZ
konz_sd<-sd[sd$site=="KONZ",]
head(konz_sd)
konz_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
konz_sd[1,9]<-((konz_sd[2,5]-konz_sd[1,5])/2)+konz_sd[1,5]
konz_sd[2,9]<-((konz_sd[2,5]-konz_sd[1,5])/2)+((konz_sd[3,5]-konz_sd[2,5])/2)
konz_sd[3,9]<-((konz_sd[3,5]-konz_sd[2,5])/2)+((konz_sd[4,5]-konz_sd[3,5])/2)
konz_sd[4,9]<-((konz_sd[4,5]-konz_sd[3,5])/2)+((konz_sd[5,5]-konz_sd[4,5])/2)
konz_sd[5,9]<-((konz_sd[5,5]-konz_sd[4,5])/2)+((konz_sd[6,5]-konz_sd[5,5])/2)
konz_sd[6,9]<-((konz_sd[6,5]-konz_sd[5,5])/2)+((konz_sd[7,5]-konz_sd[6,5])/2)
konz_sd[7,9]<-((konz_sd[7,5]-konz_sd[6,5])/2)+((konz_sd[8,5]-konz_sd[7,5])/2)
konz_sd[8,9]<-((konz_sd[8,5]-konz_sd[7,5])/2)
konz_sd$weight<-konz_sd$width/konz_sd[8,5] # divide by the lowest sensor depth
konz_sd<-sd[sd$site=="BART",]
dim(konz_sd)
#KONZ
konz_sd<-sd[sd$site=="KONZ",]
head(konz_sd)
konz_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
konz_sd[1,9]<-((konz_sd[2,5]-konz_sd[1,5])/2)+konz_sd[1,5]
konz_sd[2,9]<-((konz_sd[2,5]-konz_sd[1,5])/2)+((konz_sd[3,5]-konz_sd[2,5])/2)
konz_sd[3,9]<-((konz_sd[3,5]-konz_sd[2,5])/2)+((konz_sd[4,5]-konz_sd[3,5])/2)
konz_sd[4,9]<-((konz_sd[4,5]-konz_sd[3,5])/2)+((konz_sd[5,5]-konz_sd[4,5])/2)
konz_sd[5,9]<-((konz_sd[5,5]-konz_sd[4,5])/2)+((konz_sd[6,5]-konz_sd[5,5])/2)
konz_sd[6,9]<-((konz_sd[6,5]-konz_sd[5,5])/2)+((konz_sd[7,5]-konz_sd[6,5])/2)
konz_sd[7,9]<-((konz_sd[7,5]-konz_sd[6,5])/2)+((konz_sd[8,5]-konz_sd[7,5])/2)
konz_sd[8,9]<-((konz_sd[8,5]-konz_sd[7,5])/2)
konz_sd$weight<-konz_sd$width/konz_sd[8,5] # divide by the lowest sensor depth
dim(konz_sd)
weighted.sensors<-cbind(bart_sd, osbs_sd,srer_sd,konz_sd)
weighted.sensors
dim(konz_sd)
weighted.sensors<-rbind(bart_sd, osbs_sd,srer_sd,konz_sd)
weighted.sensors
weighted.sensors<-rbind(bart_sd, osbs_sd,srer_sd,konz_sd)
View(bart_sd)
View(konz_sd)
View(bart_sd)
library(neonUtilities)
library(lubridate)
library(ggplot2)
options(stringsAsFactors=F)
## sd has Sensor Depths
sd<-read.csv("C:\\Users\\aryoung\\Downloads\\SWC_depths.csv")
# multiply negative depth values by -1 for easier math
sd$sensorDepths<-sd$sensorDepths*-1
# only use the first sensor per site (typically the closest to each tower)
sd<-sd[sd$plot==1,]
# site-plot-meas. Used for matching up sensor depths
sd$spd<-paste(sd$site, sd$plot, sd$measurementLevel)
###make df for each site
#BART
bart_sd<-sd[sd$site=="BART",]
bart_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
bart_sd[1,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+bart_sd[1,5]
bart_sd[2,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+((bart_sd[3,5]-bart_sd[2,5])/2)
bart_sd[3,9]<-((bart_sd[3,5]-bart_sd[2,5])/2)+((bart_sd[4,5]-bart_sd[3,5])/2)
bart_sd[4,9]<-((bart_sd[4,5]-bart_sd[3,5])/2)+((bart_sd[5,5]-bart_sd[4,5])/2)
bart_sd[5,9]<-((bart_sd[5,5]-bart_sd[4,5])/2)+((bart_sd[6,5]-bart_sd[5,5])/2)
bart_sd[6,9]<-((bart_sd[6,5]-bart_sd[5,5])/2)+((bart_sd[7,5]-bart_sd[6,5])/2)
bart_sd[7,9]<-((bart_sd[7,5]-bart_sd[6,5])/2)+((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd[8,9]<-((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd$weight<-bart_sd$width/bart_sd[8,5] # divide by the lowest sensor depth
dim(bart_sd)
#OSBS
osbs_sd<-sd[sd$site=="OSBS",]
osbs_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
osbs_sd[1,9]<-((osbs_sd[2,5]-osbs_sd[1,5])/2)+osbs_sd[1,5]
osbs_sd[2,9]<-((osbs_sd[2,5]-osbs_sd[1,5])/2)+((osbs_sd[3,5]-osbs_sd[2,5])/2)
osbs_sd[3,9]<-((osbs_sd[3,5]-osbs_sd[2,5])/2)+((osbs_sd[4,5]-osbs_sd[3,5])/2)
osbs_sd[4,9]<-((osbs_sd[4,5]-osbs_sd[3,5])/2)+((osbs_sd[5,5]-osbs_sd[4,5])/2)
osbs_sd[5,9]<-((osbs_sd[5,5]-osbs_sd[4,5])/2)+((osbs_sd[6,5]-osbs_sd[5,5])/2)
osbs_sd[6,9]<-((osbs_sd[6,5]-osbs_sd[5,5])/2)+((osbs_sd[7,5]-osbs_sd[6,5])/2)
osbs_sd[7,9]<-((osbs_sd[7,5]-osbs_sd[6,5])/2)+((osbs_sd[8,5]-osbs_sd[7,5])/2)
osbs_sd[8,9]<-((osbs_sd[8,5]-osbs_sd[7,5])/2)
osbs_sd$weight<-osbs_sd$width/osbs_sd[8,5] # divide by the lowest sensor depth
dim(osbs_sd)
#SRER
srer_sd<-sd[sd$site=="SRER",]
srer_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
srer_sd[1,9]<-((srer_sd[2,5]-srer_sd[1,5])/2)+srer_sd[1,5]
srer_sd[2,9]<-((srer_sd[2,5]-srer_sd[1,5])/2)+((srer_sd[3,5]-srer_sd[2,5])/2)
srer_sd[3,9]<-((srer_sd[3,5]-srer_sd[2,5])/2)+((srer_sd[4,5]-srer_sd[3,5])/2)
srer_sd[4,9]<-((srer_sd[4,5]-srer_sd[3,5])/2)+((srer_sd[5,5]-srer_sd[4,5])/2)
srer_sd[5,9]<-((srer_sd[5,5]-srer_sd[4,5])/2)+((srer_sd[6,5]-srer_sd[5,5])/2)
srer_sd[6,9]<-((srer_sd[6,5]-srer_sd[5,5])/2)+((srer_sd[7,5]-srer_sd[6,5])/2)
srer_sd[7,9]<-((srer_sd[7,5]-srer_sd[6,5])/2)+((srer_sd[8,5]-srer_sd[7,5])/2)
srer_sd[8,9]<-((srer_sd[8,5]-srer_sd[7,5])/2)
srer_sd$weight<-srer_sd$width/srer_sd[8,5] # divide by the lowest sensor depth
dim(srer_sd)
#KONZ
konz_sd<-sd[sd$site=="KONZ",]
head(konz_sd)
konz_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
konz_sd[1,9]<-((konz_sd[2,5]-konz_sd[1,5])/2)+konz_sd[1,5]
konz_sd[2,9]<-((konz_sd[2,5]-konz_sd[1,5])/2)+((konz_sd[3,5]-konz_sd[2,5])/2)
konz_sd[3,9]<-((konz_sd[3,5]-konz_sd[2,5])/2)+((konz_sd[4,5]-konz_sd[3,5])/2)
konz_sd[4,9]<-((konz_sd[4,5]-konz_sd[3,5])/2)+((konz_sd[5,5]-konz_sd[4,5])/2)
konz_sd[5,9]<-((konz_sd[5,5]-konz_sd[4,5])/2)+((konz_sd[6,5]-konz_sd[5,5])/2)
konz_sd[6,9]<-((konz_sd[6,5]-konz_sd[5,5])/2)+((konz_sd[7,5]-konz_sd[6,5])/2)
konz_sd[7,9]<-((konz_sd[7,5]-konz_sd[6,5])/2)+((konz_sd[8,5]-konz_sd[7,5])/2)
konz_sd[8,9]<-((konz_sd[8,5]-konz_sd[7,5])/2)
konz_sd$weight<-konz_sd$width/konz_sd[8,5] # divide by the lowest sensor depth
dim(konz_sd)
weighted.sensors<-rbind(bart_sd, osbs_sd,srer_sd,konz_sd)
weighted.sensors
# Use the half hourly data
sm30<-sm$SWS_30_minute
## Load soil moisture data to R environment
sm <- loadByProduct(dpID="DP1.00094.001",
site=c("BART","SRER","KONZ","OSBS"),
startdate="2019-01",
enddate="2019-12", check.size=F)
library(neonUtilities)
library(lubridate)
library(ggplot2)
options(stringsAsFactors=F)
## sd has Sensor Depths
sd<-read.csv("C:\\Users\\aryoung\\Downloads\\SWC_depths.csv")
# multiply negative depth values by -1 for easier math
sd$sensorDepths<-sd$sensorDepths*-1
# only use the first sensor per site (typically the closest to each tower)
sd<-sd[sd$plot==1,]
# site-plot-meas. Used for matching up sensor depths
sd$spd<-paste(sd$site, sd$plot, sd$measurementLevel)
###make df for each site
#BART
bart_sd<-sd[sd$site=="BART",]
bart_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
bart_sd[1,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+bart_sd[1,5]
bart_sd[2,9]<-((bart_sd[2,5]-bart_sd[1,5])/2)+((bart_sd[3,5]-bart_sd[2,5])/2)
bart_sd[3,9]<-((bart_sd[3,5]-bart_sd[2,5])/2)+((bart_sd[4,5]-bart_sd[3,5])/2)
bart_sd[4,9]<-((bart_sd[4,5]-bart_sd[3,5])/2)+((bart_sd[5,5]-bart_sd[4,5])/2)
bart_sd[5,9]<-((bart_sd[5,5]-bart_sd[4,5])/2)+((bart_sd[6,5]-bart_sd[5,5])/2)
bart_sd[6,9]<-((bart_sd[6,5]-bart_sd[5,5])/2)+((bart_sd[7,5]-bart_sd[6,5])/2)
bart_sd[7,9]<-((bart_sd[7,5]-bart_sd[6,5])/2)+((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd[8,9]<-((bart_sd[8,5]-bart_sd[7,5])/2)
bart_sd$weight<-bart_sd$width/bart_sd[8,5] # divide by the lowest sensor depth
dim(bart_sd)
#OSBS
osbs_sd<-sd[sd$site=="OSBS",]
osbs_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
osbs_sd[1,9]<-((osbs_sd[2,5]-osbs_sd[1,5])/2)+osbs_sd[1,5]
osbs_sd[2,9]<-((osbs_sd[2,5]-osbs_sd[1,5])/2)+((osbs_sd[3,5]-osbs_sd[2,5])/2)
osbs_sd[3,9]<-((osbs_sd[3,5]-osbs_sd[2,5])/2)+((osbs_sd[4,5]-osbs_sd[3,5])/2)
osbs_sd[4,9]<-((osbs_sd[4,5]-osbs_sd[3,5])/2)+((osbs_sd[5,5]-osbs_sd[4,5])/2)
osbs_sd[5,9]<-((osbs_sd[5,5]-osbs_sd[4,5])/2)+((osbs_sd[6,5]-osbs_sd[5,5])/2)
osbs_sd[6,9]<-((osbs_sd[6,5]-osbs_sd[5,5])/2)+((osbs_sd[7,5]-osbs_sd[6,5])/2)
osbs_sd[7,9]<-((osbs_sd[7,5]-osbs_sd[6,5])/2)+((osbs_sd[8,5]-osbs_sd[7,5])/2)
osbs_sd[8,9]<-((osbs_sd[8,5]-osbs_sd[7,5])/2)
osbs_sd$weight<-osbs_sd$width/osbs_sd[8,5] # divide by the lowest sensor depth
dim(osbs_sd)
#SRER
srer_sd<-sd[sd$site=="SRER",]
srer_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
srer_sd[1,9]<-((srer_sd[2,5]-srer_sd[1,5])/2)+srer_sd[1,5]
srer_sd[2,9]<-((srer_sd[2,5]-srer_sd[1,5])/2)+((srer_sd[3,5]-srer_sd[2,5])/2)
srer_sd[3,9]<-((srer_sd[3,5]-srer_sd[2,5])/2)+((srer_sd[4,5]-srer_sd[3,5])/2)
srer_sd[4,9]<-((srer_sd[4,5]-srer_sd[3,5])/2)+((srer_sd[5,5]-srer_sd[4,5])/2)
srer_sd[5,9]<-((srer_sd[5,5]-srer_sd[4,5])/2)+((srer_sd[6,5]-srer_sd[5,5])/2)
srer_sd[6,9]<-((srer_sd[6,5]-srer_sd[5,5])/2)+((srer_sd[7,5]-srer_sd[6,5])/2)
srer_sd[7,9]<-((srer_sd[7,5]-srer_sd[6,5])/2)+((srer_sd[8,5]-srer_sd[7,5])/2)
srer_sd[8,9]<-((srer_sd[8,5]-srer_sd[7,5])/2)
srer_sd$weight<-srer_sd$width/srer_sd[8,5] # divide by the lowest sensor depth
dim(srer_sd)
#KONZ
konz_sd<-sd[sd$site=="KONZ",]
head(konz_sd)
konz_sd$width<-0 # made a new column, a numerical placeholderto be filled with sensor widths
konz_sd[1,9]<-((konz_sd[2,5]-konz_sd[1,5])/2)+konz_sd[1,5]
konz_sd[2,9]<-((konz_sd[2,5]-konz_sd[1,5])/2)+((konz_sd[3,5]-konz_sd[2,5])/2)
konz_sd[3,9]<-((konz_sd[3,5]-konz_sd[2,5])/2)+((konz_sd[4,5]-konz_sd[3,5])/2)
konz_sd[4,9]<-((konz_sd[4,5]-konz_sd[3,5])/2)+((konz_sd[5,5]-konz_sd[4,5])/2)
konz_sd[5,9]<-((konz_sd[5,5]-konz_sd[4,5])/2)+((konz_sd[6,5]-konz_sd[5,5])/2)
konz_sd[6,9]<-((konz_sd[6,5]-konz_sd[5,5])/2)+((konz_sd[7,5]-konz_sd[6,5])/2)
konz_sd[7,9]<-((konz_sd[7,5]-konz_sd[6,5])/2)+((konz_sd[8,5]-konz_sd[7,5])/2)
konz_sd[8,9]<-((konz_sd[8,5]-konz_sd[7,5])/2)
konz_sd$weight<-konz_sd$width/konz_sd[8,5] # divide by the lowest sensor depth
dim(konz_sd)
weighted.sensors<-rbind(bart_sd, osbs_sd,srer_sd,konz_sd)
weighted.sensors
## Load soil moisture data to R environment
sm <- loadByProduct(dpID="DP1.00094.001",
site=c("BART","SRER","KONZ","OSBS"),
startdate="2019-01",
enddate="2019-12", check.size=F)
# Use the half hourly data
sm30<-sm$SWS_30_minute
# turn into numeric for later matching with sensor depth measurements
sm30$horizontalPosition<-as.numeric(sm30$horizontalPosition)
sm30$verticalPosition<-as.numeric(sm30$verticalPosition)
# subtract 500 to get rid of the leading '50_' in the vertical position codes.
sm30$verticalPosition<-sm30$verticalPosition-500
## Load soil moisture data to R environment
sm <- loadByProduct(dpID="DP1.00094.001",
site=c("BART","SRER","KONZ","OSBS"),
startdate="2019-05",
enddate="2019-06", check.size=F)
## Load soil moisture data to R environment
sm <- loadByProduct(dpID="DP1.00094.001",
site=c("BART","SRER","KONZ","OSBS"),
startdate="2019-07",
enddate="2019-08", check.size=F)
